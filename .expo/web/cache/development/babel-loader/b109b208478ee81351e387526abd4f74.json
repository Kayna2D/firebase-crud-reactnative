{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"../../firebase/firebaseConnection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Cadastro = function (_React$Component) {\n  _inherits(Cadastro, _React$Component);\n\n  var _super = _createSuper(Cadastro);\n\n  function Cadastro() {\n    _classCallCheck(this, Cadastro);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Cadastro, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(\"\"),\n          _useState2 = _slicedToArray(_useState, 2),\n          nome = _useState2[0],\n          setNome = _useState2[1];\n\n      var _useState3 = useState(\"\"),\n          _useState4 = _slicedToArray(_useState3, 2),\n          nota1 = _useState4[0],\n          setNota1 = _useState4[1];\n\n      var _useState5 = useState(\"\"),\n          _useState6 = _slicedToArray(_useState5, 2),\n          nota2 = _useState6[0],\n          setNota2 = _useState6[1];\n\n      var _useState7 = useState(\"\"),\n          _useState8 = _slicedToArray(_useState7, 2),\n          nota3 = _useState8[0],\n          setNota3 = _useState8[1];\n\n      var _useState9 = useState(\"\"),\n          _useState10 = _slicedToArray(_useState9, 2),\n          imagem = _useState10[0],\n          setImagem = _useState10[1];\n\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.header,\n            children: \"Cadastro\"\n          }), _jsxs(ScrollView, {\n            children: [_jsx(View, {\n              style: styles.inputContainer,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Nome\",\n                maxLength: 50,\n                onChangeText: function onChangeText(texto) {\n                  return setNome(texto);\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputContainer,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Nota 1\",\n                onChangeText: function onChangeText(texto) {\n                  return setNome(texto);\n                },\n                maxLength: 5\n              })\n            }), _jsx(View, {\n              style: styles.inputContainer,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Nota 2\",\n                maxLength: 5,\n                onChangeText: function onChangeText(texto) {\n                  return setNome(texto);\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputContainer,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Nota 3\",\n                maxLength: 5,\n                onChangeText: function onChangeText(texto) {\n                  return setNome(texto);\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputContainer,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Foto de Perfil\",\n                maxLength: 100,\n                onChangeText: function onChangeText(texto) {\n                  return setNome(texto);\n                }\n              })\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.saveButton,\n                children: _jsx(Text, {\n                  style: styles.saveButtonText,\n                  children: \"Cadastrar\"\n                })\n              }), _jsx(\"text\", {\n                children: nome\n              })]\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Cadastro;\n}(React.Component);\n\nexport { Cadastro as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 45,\n    backgroundColor: '#F5FCFF'\n  },\n  header: {\n    fontSize: 25,\n    textAlign: 'center',\n    margin: 10,\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    paddingTop: 15\n  },\n  textInput: {\n    borderColor: '#CCCCCC',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: 50,\n    fontSize: 25,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  saveButton: {\n    borderWidth: 1,\n    borderColor: '#007BFF',\n    backgroundColor: '#007BFF',\n    padding: 15,\n    margin: 5\n  },\n  saveButtonText: {\n    color: '#FFFFFF',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["Component","useState","React","firebase","Cadastro","nome","setNome","nota1","setNota1","nota2","setNota2","nota3","setNota3","imagem","setImagem","styles","container","header","inputContainer","textInput","texto","saveButton","saveButtonText","StyleSheet","create","flex","paddingTop","backgroundColor","fontSize","textAlign","margin","fontWeight","borderColor","borderTopWidth","borderBottomWidth","height","paddingLeft","paddingRight","borderWidth","padding","color"],"sources":["C:/Users/Aluno/Desktop/firebase-crud-reactnative/src/paginas/cadastro/index.js"],"sourcesContent":["import { Component, useState } from \"react\";\r\nimport { Text,View, Button, StyleSheet, ScrollView, TouchableOpacity } from \"react-native\";\r\nimport React from \"react\";\r\nimport { TextInput } from \"react-native\";\r\nimport firebase from \"../../firebase/firebaseConnection\";\r\n\r\nexport default class Cadastro extends React.Component {\r\n  \r\n    render() {\r\n\r\n      \r\n      const [nome, setNome] = useState(\"\");\r\n      const [nota1, setNota1] = useState(\"\");\r\n      const [nota2, setNota2] = useState(\"\");\r\n      const [nota3, setNota3] = useState(\"\");\r\n      const [imagem, setImagem] = useState(\"\");\r\n      \r\n      return (\r\n        \r\n\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.header}>Cadastro</Text>\r\n            <ScrollView>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nome\"\r\n                    maxLength={50}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 1\"\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    maxLength={5}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 2\"\r\n                    maxLength={5}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 3\"\r\n                    maxLength={5}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Foto de Perfil\"\r\n                    maxLength={100}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TouchableOpacity\r\n                        style={styles.saveButton}\r\n                    >\r\n                        <Text style={styles.saveButtonText}>Cadastrar</Text>\r\n                    </TouchableOpacity>\r\n                    <text>{nome}</text>\r\n                </View>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 45,\r\n      backgroundColor: '#F5FCFF',\r\n    },\r\n    header: {\r\n      fontSize: 25,\r\n      textAlign: 'center',\r\n      margin: 10,\r\n      fontWeight: 'bold'\r\n    }, \r\n    inputContainer: {\r\n        paddingTop: 15\r\n      },\r\n      textInput: {\r\n        borderColor: '#CCCCCC',\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        height: 50,\r\n        fontSize: 25,\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n      },\r\n      saveButton: {\r\n        borderWidth: 1,\r\n        borderColor: '#007BFF',\r\n        backgroundColor: '#007BFF',\r\n        padding: 15,\r\n        margin: 5\r\n      },\r\n      saveButtonText: {\r\n        color: '#FFFFFF',\r\n        fontSize: 20,\r\n        textAlign: 'center'\r\n      }\r\n  });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}