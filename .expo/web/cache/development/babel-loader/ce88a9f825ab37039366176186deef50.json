{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"../../firebase/firebaseConnection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Cadastrar() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nota1 = _useState4[0],\n      setNota1 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nota2 = _useState6[0],\n      setNota2 = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nota3 = _useState8[0],\n      setNota3 = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imagem = _useState10[0],\n      setImagem = _useState10[1];\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Cadastro\"\n      }), _jsxs(ScrollView, {\n        children: [_jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Nome\",\n            maxLength: 50,\n            onChangeText: function onChangeText(texto) {\n              return setNome(texto);\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Nota 1\",\n            onChangeText: function onChangeText(texto) {\n              return setNome(texto);\n            },\n            maxLength: 5\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Nota 2\",\n            maxLength: 5,\n            onChangeText: function onChangeText(texto) {\n              return setNome(texto);\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Nota 3\",\n            maxLength: 5,\n            onChangeText: function onChangeText(texto) {\n              return setNome(texto);\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Foto de Perfil\",\n            maxLength: 100,\n            onChangeText: function onChangeText(texto) {\n              return setNome(texto);\n            }\n          })\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.saveButton,\n            children: _jsx(Text, {\n              style: styles.saveButtonText,\n              children: \"Cadastrar\"\n            })\n          }), _jsx(Text, {\n            children: nome\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 45,\n    backgroundColor: '#F5FCFF'\n  },\n  header: {\n    fontSize: 25,\n    textAlign: 'center',\n    margin: 10,\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    paddingTop: 15\n  },\n  textInput: {\n    borderColor: '#CCCCCC',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: 50,\n    fontSize: 25,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  saveButton: {\n    borderWidth: 1,\n    borderColor: '#007BFF',\n    backgroundColor: '#007BFF',\n    padding: 15,\n    margin: 5\n  },\n  saveButtonText: {\n    color: '#FFFFFF',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["Component","React","useState","firebase","Cadastrar","nome","setNome","nota1","setNota1","nota2","setNota2","nota3","setNota3","imagem","setImagem","styles","container","header","inputContainer","textInput","texto","saveButton","saveButtonText","StyleSheet","create","flex","paddingTop","backgroundColor","fontSize","textAlign","margin","fontWeight","borderColor","borderTopWidth","borderBottomWidth","height","paddingLeft","paddingRight","borderWidth","padding","color"],"sources":["C:/Users/Aluno/Desktop/firebase-crud-reactnative/src/paginas/cadastro/index.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport { Text,View, Button, StyleSheet, ScrollView, TouchableOpacity } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\nimport firebase from \"../../firebase/firebaseConnection\";\r\n\r\nexport default function Cadastrar() {\r\n\r\n      const [nome, setNome] = useState(\"\");\r\n      const [nota1, setNota1] = useState(\"\");\r\n      const [nota2, setNota2] = useState(\"\");\r\n      const [nota3, setNota3] = useState(\"\");\r\n      const [imagem, setImagem] = useState(\"\");\r\n\r\n      return (\r\n        \r\n\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.header}>Cadastro</Text>\r\n            <ScrollView>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nome\"\r\n                    maxLength={50}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 1\"\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    maxLength={5}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 2\"\r\n                    maxLength={5}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nota 3\"\r\n                    maxLength={5}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Foto de Perfil\"\r\n                    maxLength={100}\r\n                    onChangeText={(texto) => setNome(texto)}\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TouchableOpacity\r\n                        style={styles.saveButton}\r\n                    >\r\n                        <Text style={styles.saveButtonText}>Cadastrar</Text>\r\n                    </TouchableOpacity>\r\n                    <Text>{nome}</Text>\r\n                </View>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  \r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 45,\r\n      backgroundColor: '#F5FCFF',\r\n    },\r\n    header: {\r\n      fontSize: 25,\r\n      textAlign: 'center',\r\n      margin: 10,\r\n      fontWeight: 'bold'\r\n    }, \r\n    inputContainer: {\r\n        paddingTop: 15\r\n      },\r\n      textInput: {\r\n        borderColor: '#CCCCCC',\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        height: 50,\r\n        fontSize: 25,\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n      },\r\n      saveButton: {\r\n        borderWidth: 1,\r\n        borderColor: '#007BFF',\r\n        backgroundColor: '#007BFF',\r\n        padding: 15,\r\n        margin: 5\r\n      },\r\n      saveButtonText: {\r\n        color: '#FFFFFF',\r\n        fontSize: 20,\r\n        textAlign: 'center'\r\n      }\r\n  });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}